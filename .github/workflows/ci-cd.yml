name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test and Build
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 📦 Install root dependencies
      run: npm ci
    
    - name: 📦 Install server dependencies
      run: cd server && npm ci
    
    - name: 📦 Install client dependencies
      run: cd client && npm ci
    
    - name: 🔍 Lint client code
      run: cd client && npm run lint
    
    - name: 🏗️ Build server
      run: cd server && npm run build
    
    - name: 🏗️ Build client
      run: cd client && npm run build
    
    - name: 📤 Upload client build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-build-${{ matrix.node-version }}
        path: client/dist/
    
    - name: 📤 Upload server build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: server-build-${{ matrix.node-version }}
        path: server/dist/

  # Docker Build (only on main branch)
  docker-build:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/mern-template:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/mern-template:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔒 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: 📤 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
